index index.html;

# Multiple memcached servers, first one back wins!
upstream memcached {
	server 127.0.0.1:11211;
}

# Wordpress site server
upstream wordpressfcgi {
	server 127.0.0.1:8000;
}

# Default location
location / {
	
	## Forward all this information for PHP when we proxy_pass
	proxy_set_header True-Client-IP $http_true_client_ip;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Default type is plain text, need to make it html so that any cache hits by nginx are served as html
	default_type  text/html;

	set $memcached_key data-$scheme://$host$request_uri;
	set $can_cache 1;

	# Bypass memcached for POST requests
	if ( $request_method = "POST" ) {
		set $can_cache 0;
	}

	# avoid cache serve of wp-admin-like pages, starting with "wp-"
	if ( $uri ~ "/wp-" ) {
		set $can_cache 0;
	}

	# avoid cache serve of any URL with query strings																		
	if ( $args ) {
		set $can_cache 0;
	}
	
	# If logged in, don't cache.
	if ($http_cookie ~* "comment_author_|wordpressuser_|wp-postpass_|wordpress_logged_in_" ) {
		set $can_cache 0;
	}

	# Tell memcached when to try another server
	memcached_next_upstream not_found invalid_response error timeout;

	# Pull from memcached pool if possible
	if ( $can_cache = 1 ) {

		# Set the default memcached key using the host + full request uri (including querystring)
		#set $memcached_key $http_host$request_uri;
		set $memcached_key data-$scheme://$host$request_uri;

		# These headers are not needed
		add_header X-MemKey $memcached_key;
		add_header X-Requestkey $request_uri;
		add_header X-TFCache "memcached";
		
		# Pass the request to memcached
		memcached_pass memcached;

		# Pass any misses or fails to wordpress
		error_page 404 502 504 = @fallback;
	}

	if ( $can_cache = 0 ) {
		# Pass any misses to the wordpress server
		proxy_pass http://wordpressfcgi;
	}

}

# Define fallback location for memcache misses
location @fallback {
	proxy_pass http://wordpressfcgi;
}